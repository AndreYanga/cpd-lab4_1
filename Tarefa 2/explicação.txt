O programa implementa um padrão de comunicação em anel onde o 
processo 0 envia um inteiro para o processo 1, o processo 1 para o 
processo 2 e assim por diante, até que o último processo envie de 
volta para o processo 0.
Isso é repetido para um número de rodadas especificado pelo usuário ( argv[1] ).
O programa mede o tempo total gasto e calcula o tempo médio por
 operação de envio/recebimento.
Principais funções do MPI: MPI_Send , MPI_Recv , MPI_Barrier , MPI_Wtime .


mpicc -o sendReceive sendReceive.c
mpirun -np 4 ./sendReceive 1000
mpirun -np 4 ./sendReceive 10000
mpirun -np 8 ./sendReceive 1000

saida
Rounds= 1000, N Processes = 4, Time =     0.012345 sec,
Average time per Send/Recv =   1.54 us
Rounds= 10000, N Processes = 4, Time =     0.123456 sec,
Average time per Send/Recv =   1.54 us
Rounds= 1000, N Processes = 8, Time =     0.024680 sec,
Average time per Send/Recv =   1.54 us

Espaço reservado para captura de tela : 
capture a saída do terminal para pelo menos duas execuções.

c. Interpretação :

Escala de tempo : o tempo total aumenta com o número de rodadas e processos 
devido a mais eventos de comunicação.
Tempo médio por envio/recebimento : permanece relativamente constante 
(por exemplo, ~1,54 µs), indicando sobrecarga consistente por mensagem, 
embora isso dependa da rede e da implementação do MPI.
Escalabilidade : O padrão de anel é escalonado linearmente com os processos,
 pois cada processo executa um envio e um recebimento por rodada.